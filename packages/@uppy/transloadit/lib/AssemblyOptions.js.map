{"version":3,"names":["ErrorWithCause","validateParams","params","Error","JSON","parse","err","cause","auth","key","dedupe","list","dedupeMap","Object","create","fileIDs","options","filter","Boolean","id","stringify","fileIDArrays","push","values","map","flat","getAssemblyOptions","file","assemblyOptions","getFields","Array","isArray","fields","fromEntries","fieldName","meta","AssemblyOptions","constructor","files","opts","build","length","Promise","all","undefined","then","alwaysRunAssembly"],"sources":["AssemblyOptions.js"],"sourcesContent":["import ErrorWithCause from '@uppy/utils/lib/ErrorWithCause'\n\n/**\n * Check that Assembly parameters are present and include all required fields.\n */\nfunction validateParams (params) {\n  if (params == null) {\n    throw new Error('Transloadit: The `params` option is required.')\n  }\n\n  if (typeof params === 'string') {\n    try {\n      // eslint-disable-next-line no-param-reassign\n      params = JSON.parse(params)\n    } catch (err) {\n      // Tell the user that this is not an Uppy bug!\n      throw new ErrorWithCause('Transloadit: The `params` option is a malformed JSON string.', { cause: err })\n    }\n  }\n\n  if (!params.auth || !params.auth.key) {\n    throw new Error('Transloadit: The `params.auth.key` option is required. '\n      + 'You can find your Transloadit API key at https://transloadit.com/c/template-credentials')\n  }\n}\n\n/**\n * Combine Assemblies with the same options into a single Assembly for all the\n * relevant files.\n */\nfunction dedupe (list) {\n  const dedupeMap = Object.create(null)\n  for (const { fileIDs, options } of list.filter(Boolean)) {\n    const id = JSON.stringify(options)\n    if (id in dedupeMap) {\n      dedupeMap[id].fileIDArrays.push(fileIDs)\n    } else {\n      dedupeMap[id] = {\n        options,\n        fileIDArrays: [fileIDs],\n      }\n    }\n  }\n\n  return Object.values(dedupeMap).map(({ options, fileIDArrays }) => ({\n    options,\n    fileIDs: fileIDArrays.flat(1),\n  }))\n}\n\nasync function getAssemblyOptions (file, options) {\n  const assemblyOptions = typeof options.assemblyOptions === 'function'\n    ? await options.assemblyOptions(file, options)\n    : options.assemblyOptions\n\n  validateParams(assemblyOptions.params)\n\n  return assemblyOptions\n}\n\nfunction getFields (file, assemblyOptions) {\n  if (Array.isArray(assemblyOptions.fields)) {\n    return Object.fromEntries(\n      assemblyOptions.fields.map((fieldName) => [fieldName, file.meta[fieldName]]),\n    )\n  }\n  return {}\n}\n\n/**\n * Turn Transloadit plugin options and a list of files into a list of Assembly\n * options.\n */\nclass AssemblyOptions {\n  constructor (files, opts) {\n    this.files = files\n    this.opts = opts\n  }\n\n  /**\n   * Generate a set of Assemblies that will handle the upload.\n   * Returns a Promise for an object with keys:\n   *  - fileIDs - an array of file IDs to add to this Assembly\n   *  - options - Assembly options\n   */\n  async build () {\n    const options = this.opts\n\n    if (this.files.length > 0) {\n      return Promise.all(\n        this.files.map(async (file) => {\n          if (file == null) return undefined\n\n          const assemblyOptions = await getAssemblyOptions(file, options)\n\n          // We check if the file is present here again, because it could had been\n          // removed during the await, e.g. if the user hit cancel while we were\n          // waiting for the options.\n          if (file == null) return undefined\n\n          assemblyOptions.fields = getFields(file, assemblyOptions)\n\n          return {\n            fileIDs: [file.id],\n            options: assemblyOptions,\n          }\n        }),\n      ).then(dedupe)\n    }\n\n    if (options.alwaysRunAssembly) {\n      // No files, just generate one Assembly\n      const assemblyOptions = await getAssemblyOptions(null, options)\n\n      return [\n        {\n          fileIDs: this.files.map((file) => file.id),\n          options: assemblyOptions,\n        },\n      ]\n    }\n\n    // If there are no files and we do not `alwaysRunAssembly`,\n    // don't do anything.\n    return []\n  }\n}\n\nexport default AssemblyOptions\nexport { validateParams }\n"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,gCAA3B;AAEA;AACA;AACA;;AACA,SAASC,cAAT,CAAyBC,MAAzB,EAAiC;EAC/B,IAAIA,MAAM,IAAI,IAAd,EAAoB;IAClB,MAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;EACD;;EAED,IAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;IAC9B,IAAI;MACF;MACAA,MAAM,GAAGE,IAAI,CAACC,KAAL,CAAWH,MAAX,CAAT;IACD,CAHD,CAGE,OAAOI,GAAP,EAAY;MACZ;MACA,MAAM,IAAIN,cAAJ,CAAmB,8DAAnB,EAAmF;QAAEO,KAAK,EAAED;MAAT,CAAnF,CAAN;IACD;EACF;;EAED,IAAI,CAACJ,MAAM,CAACM,IAAR,IAAgB,CAACN,MAAM,CAACM,IAAP,CAAYC,GAAjC,EAAsC;IACpC,MAAM,IAAIN,KAAJ,CAAU,4DACZ,yFADE,CAAN;EAED;AACF;AAED;AACA;AACA;AACA;;;AACA,SAASO,MAAT,CAAiBC,IAAjB,EAAuB;EACrB,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAlB;;EACA,KAAK,MAAM;IAAEC,OAAF;IAAWC;EAAX,CAAX,IAAmCL,IAAI,CAACM,MAAL,CAAYC,OAAZ,CAAnC,EAAyD;IACvD,MAAMC,EAAE,GAAGf,IAAI,CAACgB,SAAL,CAAeJ,OAAf,CAAX;;IACA,IAAIG,EAAE,IAAIP,SAAV,EAAqB;MACnBA,SAAS,CAACO,EAAD,CAAT,CAAcE,YAAd,CAA2BC,IAA3B,CAAgCP,OAAhC;IACD,CAFD,MAEO;MACLH,SAAS,CAACO,EAAD,CAAT,GAAgB;QACdH,OADc;QAEdK,YAAY,EAAE,CAACN,OAAD;MAFA,CAAhB;IAID;EACF;;EAED,OAAOF,MAAM,CAACU,MAAP,CAAcX,SAAd,EAAyBY,GAAzB,CAA6B;IAAA,IAAC;MAAER,OAAF;MAAWK;IAAX,CAAD;IAAA,OAAgC;MAClEL,OADkE;MAElED,OAAO,EAAEM,YAAY,CAACI,IAAb,CAAkB,CAAlB;IAFyD,CAAhC;EAAA,CAA7B,CAAP;AAID;;AAED,eAAeC,kBAAf,CAAmCC,IAAnC,EAAyCX,OAAzC,EAAkD;EAChD,MAAMY,eAAe,GAAG,OAAOZ,OAAO,CAACY,eAAf,KAAmC,UAAnC,GACpB,MAAMZ,OAAO,CAACY,eAAR,CAAwBD,IAAxB,EAA8BX,OAA9B,CADc,GAEpBA,OAAO,CAACY,eAFZ;EAIA3B,cAAc,CAAC2B,eAAe,CAAC1B,MAAjB,CAAd;EAEA,OAAO0B,eAAP;AACD;;AAED,SAASC,SAAT,CAAoBF,IAApB,EAA0BC,eAA1B,EAA2C;EACzC,IAAIE,KAAK,CAACC,OAAN,CAAcH,eAAe,CAACI,MAA9B,CAAJ,EAA2C;IACzC,OAAOnB,MAAM,CAACoB,WAAP,CACLL,eAAe,CAACI,MAAhB,CAAuBR,GAAvB,CAA4BU,SAAD,IAAe,CAACA,SAAD,EAAYP,IAAI,CAACQ,IAAL,CAAUD,SAAV,CAAZ,CAA1C,CADK,CAAP;EAGD;;EACD,OAAO,EAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,MAAME,eAAN,CAAsB;EACpBC,WAAW,CAAEC,KAAF,EAASC,IAAT,EAAe;IACxB,KAAKD,KAAL,GAAaA,KAAb;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACD;EAED;AACF;AACA;AACA;AACA;AACA;;;EACa,MAALC,KAAK,GAAI;IACb,MAAMxB,OAAO,GAAG,KAAKuB,IAArB;;IAEA,IAAI,KAAKD,KAAL,CAAWG,MAAX,GAAoB,CAAxB,EAA2B;MACzB,OAAOC,OAAO,CAACC,GAAR,CACL,KAAKL,KAAL,CAAWd,GAAX,CAAe,MAAOG,IAAP,IAAgB;QAC7B,IAAIA,IAAI,IAAI,IAAZ,EAAkB,OAAOiB,SAAP;QAElB,MAAMhB,eAAe,GAAG,MAAMF,kBAAkB,CAACC,IAAD,EAAOX,OAAP,CAAhD,CAH6B,CAK7B;QACA;QACA;;QACA,IAAIW,IAAI,IAAI,IAAZ,EAAkB,OAAOiB,SAAP;QAElBhB,eAAe,CAACI,MAAhB,GAAyBH,SAAS,CAACF,IAAD,EAAOC,eAAP,CAAlC;QAEA,OAAO;UACLb,OAAO,EAAE,CAACY,IAAI,CAACR,EAAN,CADJ;UAELH,OAAO,EAAEY;QAFJ,CAAP;MAID,CAhBD,CADK,EAkBLiB,IAlBK,CAkBAnC,MAlBA,CAAP;IAmBD;;IAED,IAAIM,OAAO,CAAC8B,iBAAZ,EAA+B;MAC7B;MACA,MAAMlB,eAAe,GAAG,MAAMF,kBAAkB,CAAC,IAAD,EAAOV,OAAP,CAAhD;MAEA,OAAO,CACL;QACED,OAAO,EAAE,KAAKuB,KAAL,CAAWd,GAAX,CAAgBG,IAAD,IAAUA,IAAI,CAACR,EAA9B,CADX;QAEEH,OAAO,EAAEY;MAFX,CADK,CAAP;IAMD,CAnCY,CAqCb;IACA;;;IACA,OAAO,EAAP;EACD;;AApDmB;;AAuDtB,eAAeQ,eAAf;AACA,SAASnC,cAAT"}