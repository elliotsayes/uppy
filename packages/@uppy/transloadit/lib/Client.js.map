{"version":3,"names":["fetchWithNetworkError","ASSEMBLIES_ENDPOINT","Client","constructor","opts","err","params","errorReporting","type","assembly","assembly_id","instance","url","endpoint","submitError","catch","client","rateLimitedQueue","wrapPromiseFunction","createAssembly","fields","signature","expectedFiles","data","FormData","append","JSON","stringify","Object","keys","forEach","key","URL","service","href","method","headers","body","reserveFile","file","size","encodeURIComponent","assembly_ssl_url","addFile","uploadURL","Promise","reject","Error","uploadUrl","filename","name","fieldname","qs","updateNumberOfFilesInAssembly","num_expected_upload_files","pathname","assembly_updates","cancelAssembly","getAssemblyStatus","message","details","agent","navigator","userAgent","error","args","then","response","status","rateLimit","ok","serverError","statusText","statusCode","endsWith","json","cause"],"sources":["Client.js"],"sourcesContent":["import fetchWithNetworkError from '@uppy/utils/lib/fetchWithNetworkError'\n\nconst ASSEMBLIES_ENDPOINT = '/assemblies'\n\n/**\n * A Barebones HTTP API client for Transloadit.\n */\nexport default class Client {\n  #headers = {}\n\n  #fetchWithNetworkError\n\n  constructor (opts = {}) {\n    this.opts = opts\n\n    if (this.opts.client != null) {\n      this.#headers['Transloadit-Client'] = this.opts.client\n    }\n\n    this.#fetchWithNetworkError = this.opts.rateLimitedQueue.wrapPromiseFunction(fetchWithNetworkError)\n  }\n\n  /**\n   * @param  {[RequestInfo | URL, RequestInit]} args\n   * @returns {Promise<any>}\n   */\n  #fetchJSON (...args) {\n    return this.#fetchWithNetworkError(...args).then(response => {\n      if (response.status === 429) {\n        this.opts.rateLimitedQueue.rateLimit(2_000)\n        return this.#fetchJSON(...args)\n      }\n\n      if (!response.ok) {\n        const serverError = new Error(response.statusText)\n        serverError.statusCode = response.status\n\n        if (!`${args[0]}`.endsWith(ASSEMBLIES_ENDPOINT)) return Promise.reject(serverError)\n\n        // Failed assembly requests should return a more detailed error in JSON.\n        return response.json().then(assembly => {\n          if (!assembly.error) throw serverError\n\n          const error = new Error(assembly.error)\n          error.details = assembly.message\n          error.assembly = assembly\n          if (assembly.assembly_id) {\n            error.details += ` Assembly ID: ${assembly.assembly_id}`\n          }\n          throw error\n        }, err => {\n          // eslint-disable-next-line no-param-reassign\n          err.cause = serverError\n          throw err\n        })\n      }\n\n      return response.json()\n    })\n  }\n\n  /**\n   * Create a new assembly.\n   *\n   * @param {object} options\n   * @param {string|object} options.params\n   * @param {object} options.fields\n   * @param {string} options.signature\n   * @param {number} options.expectedFiles\n   */\n  createAssembly ({\n    params,\n    fields,\n    signature,\n    expectedFiles,\n  }) {\n    const data = new FormData()\n    data.append('params', typeof params === 'string'\n      ? params\n      : JSON.stringify(params))\n    if (signature) {\n      data.append('signature', signature)\n    }\n\n    Object.keys(fields).forEach((key) => {\n      data.append(key, fields[key])\n    })\n    data.append('num_expected_upload_files', expectedFiles)\n\n    const url = new URL(ASSEMBLIES_ENDPOINT, `${this.opts.service}`).href\n    return this.#fetchJSON(url, {\n      method: 'post',\n      headers: this.#headers,\n      body: data,\n    })\n      .catch((err) => this.#reportError(err, { url, type: 'API_ERROR' }))\n  }\n\n  /**\n   * Reserve resources for a file in an Assembly. Then addFile can be used later.\n   *\n   * @param {object} assembly\n   * @param {UppyFile} file\n   */\n  reserveFile (assembly, file) {\n    const size = encodeURIComponent(file.size)\n    const url = `${assembly.assembly_ssl_url}/reserve_file?size=${size}`\n    return this.#fetchJSON(url, { method: 'post', headers: this.#headers })\n      .catch((err) => this.#reportError(err, { assembly, file, url, type: 'API_ERROR' }))\n  }\n\n  /**\n   * Import a remote file to an Assembly.\n   *\n   * @param {object} assembly\n   * @param {UppyFile} file\n   */\n  addFile (assembly, file) {\n    if (!file.uploadURL) {\n      return Promise.reject(new Error('File does not have an `uploadURL`.'))\n    }\n    const size = encodeURIComponent(file.size)\n    const uploadUrl = encodeURIComponent(file.uploadURL)\n    const filename = encodeURIComponent(file.name)\n    const fieldname = 'file'\n\n    const qs = `size=${size}&filename=${filename}&fieldname=${fieldname}&s3Url=${uploadUrl}`\n    const url = `${assembly.assembly_ssl_url}/add_file?${qs}`\n    return this.#fetchJSON(url, { method: 'post', headers: this.#headers })\n      .catch((err) => this.#reportError(err, { assembly, file, url, type: 'API_ERROR' }))\n  }\n\n  /**\n   * Update the number of expected files in an already created assembly.\n   *\n   * @param {object} assembly\n   * @param {number} num_expected_upload_files\n   */\n  updateNumberOfFilesInAssembly (assembly, num_expected_upload_files) {\n    const url = new URL(assembly.assembly_ssl_url)\n    url.pathname = '/update_assemblies'\n    const body = JSON.stringify({\n      assembly_updates: [{\n        assembly_id: assembly.assembly_id,\n        num_expected_upload_files,\n      }],\n    })\n    return this.#fetchJSON(url, { method: 'post', headers: this.#headers, body })\n      .catch((err) => this.#reportError(err, { url, type: 'API_ERROR' }))\n  }\n\n  /**\n   * Cancel a running Assembly.\n   *\n   * @param {object} assembly\n   */\n  cancelAssembly (assembly) {\n    const url = assembly.assembly_ssl_url\n    return this.#fetchJSON(url, { method: 'delete', headers: this.#headers })\n      .catch((err) => this.#reportError(err, { url, type: 'API_ERROR' }))\n  }\n\n  /**\n   * Get the current status for an assembly.\n   *\n   * @param {string} url The status endpoint of the assembly.\n   */\n  getAssemblyStatus (url) {\n    return this.#fetchJSON(url, { headers: this.#headers })\n      .catch((err) => this.#reportError(err, { url, type: 'STATUS_ERROR' }))\n  }\n\n  submitError (err, { endpoint, instance, assembly } = {}) {\n    const message = err.details\n      ? `${err.message} (${err.details})`\n      : err.message\n\n    return this.#fetchJSON('https://transloaditstatus.com/client_error', {\n      method: 'post',\n      body: JSON.stringify({\n        endpoint,\n        instance,\n        assembly_id: assembly,\n        agent: typeof navigator !== 'undefined' ? navigator.userAgent : '',\n        client: this.opts.client,\n        error: message,\n      }),\n    })\n  }\n\n  #reportError = (err, params) => {\n    if (this.opts.errorReporting === false) {\n      throw err\n    }\n\n    const opts = {\n      type: params.type,\n    }\n    if (params.assembly) {\n      opts.assembly = params.assembly.assembly_id\n      opts.instance = params.assembly.instance\n    }\n    if (params.url) {\n      opts.endpoint = params.url\n    }\n\n    this.submitError(err, opts).catch(() => {\n      // not much we can do then is there\n    })\n\n    throw err\n  }\n}\n"],"mappings":"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"}